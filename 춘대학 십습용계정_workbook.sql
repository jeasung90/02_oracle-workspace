SELECT DEPARTMENT_NAME AS "학과 명", category AS "계열"
FROM tb_department;

SELECT DEPARTMENT_NAME || '의 정원은 '||capacity ||'명 입니다.' AS "학과별 정원"
FROM tb_department;

SELECT DEPARTMENT_NAME, department_no
FROM tb_department
WHERE DEPARTMENT_NAME = '국어국문학과';

SELECT STUDENT_NAME 
FROM tb_student
WHERE ABSENCE_YN = 'Y' AND department_no = 001 
AND SUBSTR(student_ssn,8,1)=2;

SELECT STUDENT_NAME 
FROM tb_student
WHERE STUDENT_NO IN('A513079','A513090', 'A513091', 'A513110', 'A513119');

SELECT DEPARTMENT_NAME AS "학과 명", category AS "계열"
FROM tb_department
WHERE capacity >= 20 AND capacity <=30;

SELECT PROFESSOR_NAME
FROM tb_professor
WHERE DEPARTMENT_NO IS NULL;

SELECT STUDENT_NAME 
FROM tb_student
WHERE DEPARTMENT_NO IS NULL;

SELECT PREATTENDING_CLASS_NO
FROM tb_class
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

SELECT DISTINCT(CATEGORY)
FROM tb_department;

SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM tb_student
WHERE ABSENCE_YN = 'N' AND SUBSTR(STUDENT_ADDRESS,1,2) IN ('전주')
AND SUBSTR( ENTRANCE_DATE,1,2)='02';


SELECT STUDENT_NO AS 학번, STUDENT_NAME AS 이름, TO_CHAR(ENTRANCE_DATE, 'YYYY-MM-DD')AS 입학년도
FROM tb_student;

SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM tb_professor
WHERE NOT professor_name LIKE '___';

SELECT PROFESSOR_NAME AS 교수이름, ABS(FLOOR(MONTHS_BETWEEN(TO_DATE(SUBSTR(PROFESSOR_SSN,1,6),'RR/MM/DD'), SYSDATE)/12)+1) AS 나이
FROM tb_professor
WHERE SUBSTR(PROFESSOR_SSN,8,1)IN('1','3')
ORDER BY 2;

SELECT SUBSTR(PROFESSOR_NAME,2,6) AS 이름
FROM tb_professor;

-- 왜 다른지 모르겠습니다. 5번
SELECT STUDENT_NO, STUDENT_NAME --,EXTRACT(YEAR FROM ENTRANCE_DATE/*입학날*/) -EXTRACT(YEAR FROM TO_DATE( SUBSTR(STUDENT_SSN/*태어난년*/,1,2),'RR')) AS 입학때만나이
FROM tb_student
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE/*입학날*/) -EXTRACT(YEAR FROM TO_DATE( SUBSTR(STUDENT_SSN/*태어난년*/,1,2),'RR')) > 19;
--WHERE FLOOR(MONTHS_BETWEEN(ENTRANCE_DATE, TO_DATE(SUBSTR(STUDENT_SSN,1,6),'RR/MM/DD'))/12)+1 >19;




SELECT TO_CHAR(DATE '2020-12-25', 'DAY') FROM DUAL;


-- 7번 YY는 20xx이구 RR은 50년 전은 20xx이구요 이후는  19XX 입니다.

SELECT STUDENT_NO, STUDENT_NAME, ENTRANCE_DATE
FROM tb_student
WHERE student_no NOT LIKE 'A%';

SELECT ROUND(AVG(POINT),1) AS 평점
FROM tb_grade
WHERE student_no = 'A517178';

SELECT DEPARTMENT_NO AS 학과번호,COUNT(*) AS "학생수(명)"
FROM tb_student
GROUP BY DEPARTMENT_NO
ORDER BY 1;

SELECT COUNT(*)
FROM tb_student
WHERE COACH_PROFESSOR_NO IS NULL;

SELECT SUBSTR(TERM_NO ,1,4)AS 년도, ROUND(AVG(POINT),1) AS 평점
FROM tb_grade 
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO ,1,4) 
ORDER BY 1;

SELECT DEPARTMENT_NO,
       SUM(CASE WHEN ABSENCE_YN = 'Y' THEN 1 ELSE 0 END) AS Y_COUNT
FROM tb_student
GROUP BY DEPARTMENT_NO
ORDER BY 1;
/*
SELECT STUDENT_NAME ,
FROM tb_student
*/
SELECT STUDENT_NAME, COUNT(*) 
FROM tb_student
GROUP BY STUDENT_NAME
HAVING COUNT(*) > 1
ORDER BY STUDENT_NAME;

SELECT SUBSTR(term_no,1,4)AS 년도, SUBSTR(term_no,5,2),AVG(POINT)
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(term_no,1,4) ,SUBSTR(term_no,5,2),SUBSTR(term_no,1,4)
ORDER BY 1;

--------------------------------------------------------------------------------
-- 1.
SELECT STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS AS 주소지
FROM tb_student
ORDER BY 1;

-- 2. 
SELECT STUDENT_NAME, STUDENT_SSN
FROM tb_student
WHERE ABSENCE_YN = 'Y'
ORDER BY 2 DESC ;

-- 3.
SELECT STUDENT_NAME AS 학생이름 , STUDENT_NO AS 학번 ,STUDENT_ADDRESS AS "거주지 주소"
FROM tb_student
WHERE SUBSTR(STUDENT_NO,1,2) <= '99' AND SUBSTR(STUDENT_ADDRESS,1,3) IN('경기도','강원도');

--4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM tb_professor
WHERE DEPARTMENT_NO = '005'
ORDER BY 2;

-- 5.
SELECT STUDENT_NO,POINT
FROM tb_grade
WHERE TERM_NO = '200402' AND CLASS_NO = 'C3118100';

-- 6.
SELECT s.STUDENT_NO, s.STUDENT_NAME, d.DEPARTMENT_NAME
FROM tb_student s
JOIN tb_department d ON s.department_no = d.department_no
ORDER BY 2;


-- 7. 
select CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN tb_department USING(DEPARTMENT_NO);

-- 8. 과목별 교수 이름을 찾으려고 한다. 과목 이름과 교수 이름을 출력하는 SQL문을 작성하시오
SELECT C.CLASS_NAME, P.PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR CP
JOIN tb_class C USING(CLASS_NO)
JOIN tb_professor P USING (PROFESSOR_NO)
ORDER BY 2;

-- 9.
SELECT C.CLASS_NAME, P.PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR CP
JOIN tb_class C USING(CLASS_NO)
JOIN tb_professor P USING (PROFESSOR_NO)
JOIN tb_department D ON (C.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회'
ORDER BY 2;

-- 10.
SELECT STUDENT_NO, STUDENT_NAME, AVG(G.POINT)
FROM tb_student
JOIN tb_grade G USING (STUDENT_NO)


