--실습문제--

--도서관리 프로그램을 만들기 위한 테이블을 만들기

--이때, 제약조건에 이름을 부여할 것

-- 각 컬럼에 주석달기




?

--1. 출판사들에 대한 데이터를 담기 위한 출판사 테이블(TB_PUBLISHER)

--컬럼: PUB_NO(출판사번호) --기본키(PUBLISHER_PK)

-- PUB_NAME(출판사명) --NOT NULL(PUBLICHSER_NN)

-- PHONE(출판사전화번호) --제약조건 없음

CREATE TABLE TB_PUBLISHER(
    PUB_NO NUMBER CONSTRAINT PUBLISHER_PK PRIMARY KEY ,
    PUB_NAME VARCHAR2(20) CONSTRAINT PUBLICHSER_NN  NOT NULL,
    PHONE NUMBER
    );
COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사명';
COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사전화번호';
--3개 정도의 샘플 데이터 추가하기

INSERT INTO TB_PUBLISHER VALUES(1, '일등출판사', 0211111111);
INSERT INTO TB_PUBLISHER VALUES(2, '이등출판사', 0222222222);
INSERT INTO TB_PUBLISHER VALUES(3, '삼등출판사', 0233333333);



--2. 도서들에 대한 데이터를 담기 위한 도서 테이블(TB_BOOK)
--컬럼: BK_NO(도서번호) --기본키(BOOK_PK)
-- BK_TITLE(도서명) --NOT NULL(BOOK_NN_TITLE)
-- BK_AUTHOR(저자명) --NOT NULL(BOOK_NN_AUTHOR)
-- BK_PRICE(가격)
-- BK_STOCK(재고) --기본값 1로 지정
-- BK_PUB_NO(출판사번호) --외래키(BOOK_FK)(TB_PUBLISHER 테이블을 참조하도록)
-- 이때 참조하고 있는 부모데이터 삭제 시 자식데이터도 삭제되도록 설정

CREATE TABLE TB_BOOK(
    BK_NO NUMBER CONSTRAINT BOOK_PK PRIMARY KEY ,
    BK_TITLE VARCHAR2(20) CONSTRAINT  BOOK_NN_TITLE NOT NULL,
    BK_AUTHOR VARCHAR2(10) CONSTRAINT BOOK_NN_AUTHOR NOT NULL,
    BK_PRICE NUMBER,
    BK_STOCK NUMBER DEFAULT '1',
    BK_PUB_NO NUMBER CONSTRAINT  BOOK_FK REFERENCES  TB_PUBLISHER  ON DELETE CASCADE
    );
    
    COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서번호';
    COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서명';
    COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '저자명';
    COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '가격';
    COMMENT ON COLUMN TB_BOOK.BK_STOCK IS '재고';
    COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사번호';
--5개 정도의 샘플 데이터 추가하기

INSERT INTO TB_BOOK VALUES (1,'남자의 과학','유시민',15750,37,1);
INSERT INTO TB_BOOK VALUES (2,'세이노 가르침','세이노',6480,1001,2);
INSERT INTO TB_BOOK VALUES (3,'아파 않는','최리나',16920,1,3);
INSERT INTO TB_BOOK VALUES (4,'꿀벌 예언','베르르',12120,11,1);
INSERT INTO TB_BOOK VALUES (5,'해커스 토익','다비드',11610,1338,2);






--3. 회원에 대한 데이터를 담기 위한 회원 테이블(TB_MEMBER)
--컬럼명: MEMBER_NO(회원번호) --기본키(MEMBER_PK)
-- MEMBER_ID(아이디) --중복금지(MEMBER_UQ)
--MEMBER_PWD(비밀번호) NOT NULL(MEMBER_NN_PWD)
--MEMBER_NAME(회원명) NOT NULL(MEMBER_NN_NAME)
--GENDER(성별) 'M' 또는 'F'로 입력되도록 제한(MEMBER_CK_GEN)
--ADDRESS(주소)
--PHONE(연락처)
--STATUS(탈퇴여부) --기본값으로 'N' 그리고 'Y' 혹은 'N'으로 입력되도록 제약조건(MEMBER_CK_STA)
--ENROLL_DATE(가입일) --기본값으로 SYSDATE, NOT NULL 조건(MEMBER_NN_EN)
CREATE TABLE TB_MEMBER(
    MEMBER_NO NUMBER CONSTRAINT MEMBER_PK PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) CONSTRAINT MEMBER_UQ UNIQUE,
    MEMBER_PWD VARCHAR2(20) CONSTRAINT MEMBER_NN_PWD NOT NULL,
    MEMBER_NAME VARCHAR2(30) CONSTRAINT MEMBER_NN_NAME NOT NULL,
    GENDER CHAR(2) CONSTRAINT MEMBER_CK_GEN CHECK(GENDER IN ('M','F')),
    ADDRESS VARCHAR2(50),
    PHONE NUMBER,
    STATUS CHAR(2)  DEFAULT 'N' CONSTRAINT MEMBER_CK_STA CHECK(STATUS IN ('N','Y','N')),
    ENROLL_DATE DATE DEFAULT SYSDATE  CONSTRAINT MEMBER_NN_EN  NOT NULL
    ); 
 COMMENT ON COLUMN TB_MEMBER.MEMBER_NO IS '회원번호';
 COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS '아이디';
 COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS '비밀번호';
 COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '회원이름';
 COMMENT ON COLUMN TB_MEMBER.GENDER IS '성별';
 COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '주소';
 COMMENT ON COLUMN TB_MEMBER.PHONE IS '전화번호';
 COMMENT ON COLUMN TB_MEMBER.STATUS IS '탈퇴여부';
 COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일';
--5개 정도의 샘플 데이터 추가하기
INSERT INTO TB_MEMBER VALUES(1,'책벌레','BUGBUG','이벌레','M','책속에 살아요','01011111111',NULL,'90/05/05');
INSERT INTO TB_MEMBER VALUES(2,'책러버','LOVE','김사랑','F','책집에 살아요','01022222222',NULL,'98/05/01');
INSERT INTO TB_MEMBER VALUES(3,'책봄잠','ZZZ','김극혐','M','도서관이랑 먼집에 살아요','010333333',NULL,'02/01/05');
INSERT INTO TB_MEMBER VALUES(4,'돈아까','MON','김깐깐','F','제일 싼 전세집에 살아요','0104444444',NULL,'85/11/05');
INSERT INTO TB_MEMBER VALUES(5,'책인싸','ANESA','박유명','M','사람 많이 사는곳에 살아요','01055555555',NULL,'10/07/25');



--4. 도서를 대여한 회원에 대한 데이터를 담기 위한 대여목록 테이블(TB_RENT)
    CREATE TABLE TB_RENT(
--컬럼:

--RENT_NO(대여번호) --기본키(RENT_PK)
 RENT_NO NUMBER CONSTRAINT RENT_PK PRIMARY KEY,
--RENT_MEM_NO(대여회원번호) --외래키(RENT_FK_MEM) TB_MEMBER와 참조하도록
 RENT_MEM_NO NUMBER CONSTRAINT  RENT_FK_MEM REFERENCES  TB_MEMBER ON DELETE SET NULL,
--이때 부모데이터 삭제 시 NULL값이 되도록 옵션 설정

--RENT_BOOK_NO(대여도서번호) --외래키(RENT_FK_BOOK) TB_BOOK와 참조하도록
 RENT_BOOK_NO NUMBER CONSTRAINT  RENT_FK_BOOK REFERENCES  TB_BOOK ON DELETE SET NULL,
--이때 부모데이터 삭제 시 NULL값이 되도록 옵션설정

--RENT_DATE(대여일) --기본값 SYSDATE
 RENT_DATE DATE DEFAULT SYSDATE
 );
--샘플데이터 3개정도 추가하기
COMMENT ON COLUMN TB_RENT.RENT_NO IS '대여번호';
COMMENT ON COLUMN TB_RENT.RENT_MEM_NO IS '대여회원번호';
COMMENT ON COLUMN TB_RENT.RENT_BOOK_NO IS '대여도서번호';
COMMENT ON COLUMN TB_RENT.RENT_DATE IS '대여일';

INSERT INTO TB_RENT VALUES (1, 1,5,NULL);
INSERT INTO TB_RENT VALUES (2, 2,2,'23/06/5');
INSERT INTO TB_RENT VALUES (3, 4,1,'19/12/15');
--2번 도서를 대여한 회원의 이름, 아이디, 대여일, 반납예정일(대여일+7)을 조회하시오.
SELECT MEMBER_NAME,MEMBER_ID, RENT_DATE , RENT_DATE + 7  AS 반납예정일
FROM TB_MEMBER
JOIN TB_RENT ON ( RENT_MEM_NO = MEMBER_NO)
WHERE RENT_BOOK_NO = 2;
